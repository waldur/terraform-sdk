// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package datasource_openstack_flavor

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
)

func OpenstackFlavorDataSourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"backend_id": schema.StringAttribute{
				Computed: true,
			},
			"cores": schema.Int64Attribute{
				Computed:            true,
				Description:         "Number of cores in a VM",
				MarkdownDescription: "Number of cores in a VM",
			},
			"disk": schema.Int64Attribute{
				Computed:            true,
				Description:         "Root disk size in MiB",
				MarkdownDescription: "Root disk size in MiB",
			},
			"display_name": schema.StringAttribute{
				Computed: true,
			},
			"field": schema.ListAttribute{
				ElementType: types.StringType,
				Optional:    true,
				Computed:    true,
			},
			"name": schema.StringAttribute{
				Computed: true,
			},
			"ram": schema.Int64Attribute{
				Computed:            true,
				Description:         "Memory size in MiB",
				MarkdownDescription: "Memory size in MiB",
			},
			"settings": schema.StringAttribute{
				Computed: true,
			},
			"url": schema.StringAttribute{
				Computed: true,
			},
			"uuid": schema.StringAttribute{
				Required: true,
			},
		},
	}
}

type OpenstackFlavorModel struct {
	BackendId   types.String `tfsdk:"backend_id"`
	Cores       types.Int64  `tfsdk:"cores"`
	Disk        types.Int64  `tfsdk:"disk"`
	DisplayName types.String `tfsdk:"display_name"`
	Field       types.List   `tfsdk:"field"`
	Name        types.String `tfsdk:"name"`
	Ram         types.Int64  `tfsdk:"ram"`
	Settings    types.String `tfsdk:"settings"`
	Url         types.String `tfsdk:"url"`
	Uuid        types.String `tfsdk:"uuid"`
}
